//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PCJack.ConnectionService.YouTubeReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayableElement", Namespace="http://schemas.datacontract.org/2004/07/ComputerHost.Objects")]
    public partial class PlayableElement : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string LengthField;
        
        private string LinkField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Length {
            get {
                return this.LengthField;
            }
            set {
                if ((object.ReferenceEquals(this.LengthField, value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link {
            get {
                return this.LinkField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkField, value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="YouTubeReference.IYouTubeService")]
    public interface IYouTubeService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IYouTubeService/OpenYoutube", ReplyAction="http://tempuri.org/IYouTubeService/OpenYoutubeResponse")]
        System.IAsyncResult BeginOpenYoutube(System.AsyncCallback callback, object asyncState);
        
        void EndOpenYoutube(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IYouTubeService/SearchForVideos", ReplyAction="http://tempuri.org/IYouTubeService/SearchForVideosResponse")]
        System.IAsyncResult BeginSearchForVideos(string s, System.AsyncCallback callback, object asyncState);
        
        void EndSearchForVideos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IYouTubeService/GetVideos", ReplyAction="http://tempuri.org/IYouTubeService/GetVideosResponse")]
        System.IAsyncResult BeginGetVideos(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PCJack.ConnectionService.YouTubeReference.PlayableElement> EndGetVideos(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IYouTubeService/GetVideosN", ReplyAction="http://tempuri.org/IYouTubeService/GetVideosNResponse")]
        System.IAsyncResult BeginGetVideosN(int i, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PCJack.ConnectionService.YouTubeReference.PlayableElement> EndGetVideosN(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IYouTubeService/ExitYouTube", ReplyAction="http://tempuri.org/IYouTubeService/ExitYouTubeResponse")]
        System.IAsyncResult BeginExitYouTube(System.AsyncCallback callback, object asyncState);
        
        void EndExitYouTube(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IYouTubeService/OpenVideo", ReplyAction="http://tempuri.org/IYouTubeService/OpenVideoResponse")]
        System.IAsyncResult BeginOpenVideo(string s, System.AsyncCallback callback, object asyncState);
        
        void EndOpenVideo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IYouTubeService/Replay", ReplyAction="http://tempuri.org/IYouTubeService/ReplayResponse")]
        System.IAsyncResult BeginReplay(System.AsyncCallback callback, object asyncState);
        
        void EndReplay(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IYouTubeService/Back", ReplyAction="http://tempuri.org/IYouTubeService/BackResponse")]
        System.IAsyncResult BeginBack(System.AsyncCallback callback, object asyncState);
        
        void EndBack(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IYouTubeService/PausePlay", ReplyAction="http://tempuri.org/IYouTubeService/PausePlayResponse")]
        System.IAsyncResult BeginPausePlay(System.AsyncCallback callback, object asyncState);
        
        void EndPausePlay(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IYouTubeService/Next", ReplyAction="http://tempuri.org/IYouTubeService/NextResponse")]
        System.IAsyncResult BeginNext(System.AsyncCallback callback, object asyncState);
        
        void EndNext(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IYouTubeService/GetTittle", ReplyAction="http://tempuri.org/IYouTubeService/GetTittleResponse")]
        System.IAsyncResult BeginGetTittle(System.AsyncCallback callback, object asyncState);
        
        string EndGetTittle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IYouTubeService/CloseYouTube", ReplyAction="http://tempuri.org/IYouTubeService/CloseYouTubeResponse")]
        System.IAsyncResult BeginCloseYouTube(System.AsyncCallback callback, object asyncState);
        
        void EndCloseYouTube(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IYouTubeServiceChannel : PCJack.ConnectionService.YouTubeReference.IYouTubeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVideosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVideosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PCJack.ConnectionService.YouTubeReference.PlayableElement> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PCJack.ConnectionService.YouTubeReference.PlayableElement>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVideosNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVideosNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PCJack.ConnectionService.YouTubeReference.PlayableElement> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PCJack.ConnectionService.YouTubeReference.PlayableElement>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTittleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTittleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class YouTubeServiceClient : System.ServiceModel.ClientBase<PCJack.ConnectionService.YouTubeReference.IYouTubeService>, PCJack.ConnectionService.YouTubeReference.IYouTubeService {
        
        private BeginOperationDelegate onBeginOpenYoutubeDelegate;
        
        private EndOperationDelegate onEndOpenYoutubeDelegate;
        
        private System.Threading.SendOrPostCallback onOpenYoutubeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchForVideosDelegate;
        
        private EndOperationDelegate onEndSearchForVideosDelegate;
        
        private System.Threading.SendOrPostCallback onSearchForVideosCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVideosDelegate;
        
        private EndOperationDelegate onEndGetVideosDelegate;
        
        private System.Threading.SendOrPostCallback onGetVideosCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVideosNDelegate;
        
        private EndOperationDelegate onEndGetVideosNDelegate;
        
        private System.Threading.SendOrPostCallback onGetVideosNCompletedDelegate;
        
        private BeginOperationDelegate onBeginExitYouTubeDelegate;
        
        private EndOperationDelegate onEndExitYouTubeDelegate;
        
        private System.Threading.SendOrPostCallback onExitYouTubeCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenVideoDelegate;
        
        private EndOperationDelegate onEndOpenVideoDelegate;
        
        private System.Threading.SendOrPostCallback onOpenVideoCompletedDelegate;
        
        private BeginOperationDelegate onBeginReplayDelegate;
        
        private EndOperationDelegate onEndReplayDelegate;
        
        private System.Threading.SendOrPostCallback onReplayCompletedDelegate;
        
        private BeginOperationDelegate onBeginBackDelegate;
        
        private EndOperationDelegate onEndBackDelegate;
        
        private System.Threading.SendOrPostCallback onBackCompletedDelegate;
        
        private BeginOperationDelegate onBeginPausePlayDelegate;
        
        private EndOperationDelegate onEndPausePlayDelegate;
        
        private System.Threading.SendOrPostCallback onPausePlayCompletedDelegate;
        
        private BeginOperationDelegate onBeginNextDelegate;
        
        private EndOperationDelegate onEndNextDelegate;
        
        private System.Threading.SendOrPostCallback onNextCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTittleDelegate;
        
        private EndOperationDelegate onEndGetTittleDelegate;
        
        private System.Threading.SendOrPostCallback onGetTittleCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseYouTubeDelegate;
        
        private EndOperationDelegate onEndCloseYouTubeDelegate;
        
        private System.Threading.SendOrPostCallback onCloseYouTubeCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public YouTubeServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(YouTubeServiceClient.GetBindingForEndpoint(endpointConfiguration), YouTubeServiceClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public YouTubeServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(YouTubeServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public YouTubeServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(YouTubeServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public YouTubeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenYoutubeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SearchForVideosCompleted;
        
        public event System.EventHandler<GetVideosCompletedEventArgs> GetVideosCompleted;
        
        public event System.EventHandler<GetVideosNCompletedEventArgs> GetVideosNCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ExitYouTubeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenVideoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ReplayCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> BackCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PausePlayCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> NextCompleted;
        
        public event System.EventHandler<GetTittleCompletedEventArgs> GetTittleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseYouTubeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PCJack.ConnectionService.YouTubeReference.IYouTubeService.BeginOpenYoutube(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOpenYoutube(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PCJack.ConnectionService.YouTubeReference.IYouTubeService.EndOpenYoutube(System.IAsyncResult result) {
            base.Channel.EndOpenYoutube(result);
        }
        
        private System.IAsyncResult OnBeginOpenYoutube(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PCJack.ConnectionService.YouTubeReference.IYouTubeService)(this)).BeginOpenYoutube(callback, asyncState);
        }
        
        private object[] OnEndOpenYoutube(System.IAsyncResult result) {
            ((PCJack.ConnectionService.YouTubeReference.IYouTubeService)(this)).EndOpenYoutube(result);
            return null;
        }
        
        private void OnOpenYoutubeCompleted(object state) {
            if ((this.OpenYoutubeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenYoutubeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenYoutubeAsync() {
            this.OpenYoutubeAsync(null);
        }
        
        public void OpenYoutubeAsync(object userState) {
            if ((this.onBeginOpenYoutubeDelegate == null)) {
                this.onBeginOpenYoutubeDelegate = new BeginOperationDelegate(this.OnBeginOpenYoutube);
            }
            if ((this.onEndOpenYoutubeDelegate == null)) {
                this.onEndOpenYoutubeDelegate = new EndOperationDelegate(this.OnEndOpenYoutube);
            }
            if ((this.onOpenYoutubeCompletedDelegate == null)) {
                this.onOpenYoutubeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenYoutubeCompleted);
            }
            base.InvokeAsync(this.onBeginOpenYoutubeDelegate, null, this.onEndOpenYoutubeDelegate, this.onOpenYoutubeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PCJack.ConnectionService.YouTubeReference.IYouTubeService.BeginSearchForVideos(string s, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchForVideos(s, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PCJack.ConnectionService.YouTubeReference.IYouTubeService.EndSearchForVideos(System.IAsyncResult result) {
            base.Channel.EndSearchForVideos(result);
        }
        
        private System.IAsyncResult OnBeginSearchForVideos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string s = ((string)(inValues[0]));
            return ((PCJack.ConnectionService.YouTubeReference.IYouTubeService)(this)).BeginSearchForVideos(s, callback, asyncState);
        }
        
        private object[] OnEndSearchForVideos(System.IAsyncResult result) {
            ((PCJack.ConnectionService.YouTubeReference.IYouTubeService)(this)).EndSearchForVideos(result);
            return null;
        }
        
        private void OnSearchForVideosCompleted(object state) {
            if ((this.SearchForVideosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchForVideosCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchForVideosAsync(string s) {
            this.SearchForVideosAsync(s, null);
        }
        
        public void SearchForVideosAsync(string s, object userState) {
            if ((this.onBeginSearchForVideosDelegate == null)) {
                this.onBeginSearchForVideosDelegate = new BeginOperationDelegate(this.OnBeginSearchForVideos);
            }
            if ((this.onEndSearchForVideosDelegate == null)) {
                this.onEndSearchForVideosDelegate = new EndOperationDelegate(this.OnEndSearchForVideos);
            }
            if ((this.onSearchForVideosCompletedDelegate == null)) {
                this.onSearchForVideosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchForVideosCompleted);
            }
            base.InvokeAsync(this.onBeginSearchForVideosDelegate, new object[] {
                        s}, this.onEndSearchForVideosDelegate, this.onSearchForVideosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PCJack.ConnectionService.YouTubeReference.IYouTubeService.BeginGetVideos(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVideos(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PCJack.ConnectionService.YouTubeReference.PlayableElement> PCJack.ConnectionService.YouTubeReference.IYouTubeService.EndGetVideos(System.IAsyncResult result) {
            return base.Channel.EndGetVideos(result);
        }
        
        private System.IAsyncResult OnBeginGetVideos(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PCJack.ConnectionService.YouTubeReference.IYouTubeService)(this)).BeginGetVideos(callback, asyncState);
        }
        
        private object[] OnEndGetVideos(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PCJack.ConnectionService.YouTubeReference.PlayableElement> retVal = ((PCJack.ConnectionService.YouTubeReference.IYouTubeService)(this)).EndGetVideos(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVideosCompleted(object state) {
            if ((this.GetVideosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVideosCompleted(this, new GetVideosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVideosAsync() {
            this.GetVideosAsync(null);
        }
        
        public void GetVideosAsync(object userState) {
            if ((this.onBeginGetVideosDelegate == null)) {
                this.onBeginGetVideosDelegate = new BeginOperationDelegate(this.OnBeginGetVideos);
            }
            if ((this.onEndGetVideosDelegate == null)) {
                this.onEndGetVideosDelegate = new EndOperationDelegate(this.OnEndGetVideos);
            }
            if ((this.onGetVideosCompletedDelegate == null)) {
                this.onGetVideosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVideosCompleted);
            }
            base.InvokeAsync(this.onBeginGetVideosDelegate, null, this.onEndGetVideosDelegate, this.onGetVideosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PCJack.ConnectionService.YouTubeReference.IYouTubeService.BeginGetVideosN(int i, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVideosN(i, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PCJack.ConnectionService.YouTubeReference.PlayableElement> PCJack.ConnectionService.YouTubeReference.IYouTubeService.EndGetVideosN(System.IAsyncResult result) {
            return base.Channel.EndGetVideosN(result);
        }
        
        private System.IAsyncResult OnBeginGetVideosN(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int i = ((int)(inValues[0]));
            return ((PCJack.ConnectionService.YouTubeReference.IYouTubeService)(this)).BeginGetVideosN(i, callback, asyncState);
        }
        
        private object[] OnEndGetVideosN(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PCJack.ConnectionService.YouTubeReference.PlayableElement> retVal = ((PCJack.ConnectionService.YouTubeReference.IYouTubeService)(this)).EndGetVideosN(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVideosNCompleted(object state) {
            if ((this.GetVideosNCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVideosNCompleted(this, new GetVideosNCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVideosNAsync(int i) {
            this.GetVideosNAsync(i, null);
        }
        
        public void GetVideosNAsync(int i, object userState) {
            if ((this.onBeginGetVideosNDelegate == null)) {
                this.onBeginGetVideosNDelegate = new BeginOperationDelegate(this.OnBeginGetVideosN);
            }
            if ((this.onEndGetVideosNDelegate == null)) {
                this.onEndGetVideosNDelegate = new EndOperationDelegate(this.OnEndGetVideosN);
            }
            if ((this.onGetVideosNCompletedDelegate == null)) {
                this.onGetVideosNCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVideosNCompleted);
            }
            base.InvokeAsync(this.onBeginGetVideosNDelegate, new object[] {
                        i}, this.onEndGetVideosNDelegate, this.onGetVideosNCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PCJack.ConnectionService.YouTubeReference.IYouTubeService.BeginExitYouTube(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExitYouTube(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PCJack.ConnectionService.YouTubeReference.IYouTubeService.EndExitYouTube(System.IAsyncResult result) {
            base.Channel.EndExitYouTube(result);
        }
        
        private System.IAsyncResult OnBeginExitYouTube(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PCJack.ConnectionService.YouTubeReference.IYouTubeService)(this)).BeginExitYouTube(callback, asyncState);
        }
        
        private object[] OnEndExitYouTube(System.IAsyncResult result) {
            ((PCJack.ConnectionService.YouTubeReference.IYouTubeService)(this)).EndExitYouTube(result);
            return null;
        }
        
        private void OnExitYouTubeCompleted(object state) {
            if ((this.ExitYouTubeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExitYouTubeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExitYouTubeAsync() {
            this.ExitYouTubeAsync(null);
        }
        
        public void ExitYouTubeAsync(object userState) {
            if ((this.onBeginExitYouTubeDelegate == null)) {
                this.onBeginExitYouTubeDelegate = new BeginOperationDelegate(this.OnBeginExitYouTube);
            }
            if ((this.onEndExitYouTubeDelegate == null)) {
                this.onEndExitYouTubeDelegate = new EndOperationDelegate(this.OnEndExitYouTube);
            }
            if ((this.onExitYouTubeCompletedDelegate == null)) {
                this.onExitYouTubeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExitYouTubeCompleted);
            }
            base.InvokeAsync(this.onBeginExitYouTubeDelegate, null, this.onEndExitYouTubeDelegate, this.onExitYouTubeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PCJack.ConnectionService.YouTubeReference.IYouTubeService.BeginOpenVideo(string s, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOpenVideo(s, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PCJack.ConnectionService.YouTubeReference.IYouTubeService.EndOpenVideo(System.IAsyncResult result) {
            base.Channel.EndOpenVideo(result);
        }
        
        private System.IAsyncResult OnBeginOpenVideo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string s = ((string)(inValues[0]));
            return ((PCJack.ConnectionService.YouTubeReference.IYouTubeService)(this)).BeginOpenVideo(s, callback, asyncState);
        }
        
        private object[] OnEndOpenVideo(System.IAsyncResult result) {
            ((PCJack.ConnectionService.YouTubeReference.IYouTubeService)(this)).EndOpenVideo(result);
            return null;
        }
        
        private void OnOpenVideoCompleted(object state) {
            if ((this.OpenVideoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenVideoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenVideoAsync(string s) {
            this.OpenVideoAsync(s, null);
        }
        
        public void OpenVideoAsync(string s, object userState) {
            if ((this.onBeginOpenVideoDelegate == null)) {
                this.onBeginOpenVideoDelegate = new BeginOperationDelegate(this.OnBeginOpenVideo);
            }
            if ((this.onEndOpenVideoDelegate == null)) {
                this.onEndOpenVideoDelegate = new EndOperationDelegate(this.OnEndOpenVideo);
            }
            if ((this.onOpenVideoCompletedDelegate == null)) {
                this.onOpenVideoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenVideoCompleted);
            }
            base.InvokeAsync(this.onBeginOpenVideoDelegate, new object[] {
                        s}, this.onEndOpenVideoDelegate, this.onOpenVideoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PCJack.ConnectionService.YouTubeReference.IYouTubeService.BeginReplay(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReplay(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PCJack.ConnectionService.YouTubeReference.IYouTubeService.EndReplay(System.IAsyncResult result) {
            base.Channel.EndReplay(result);
        }
        
        private System.IAsyncResult OnBeginReplay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PCJack.ConnectionService.YouTubeReference.IYouTubeService)(this)).BeginReplay(callback, asyncState);
        }
        
        private object[] OnEndReplay(System.IAsyncResult result) {
            ((PCJack.ConnectionService.YouTubeReference.IYouTubeService)(this)).EndReplay(result);
            return null;
        }
        
        private void OnReplayCompleted(object state) {
            if ((this.ReplayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReplayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReplayAsync() {
            this.ReplayAsync(null);
        }
        
        public void ReplayAsync(object userState) {
            if ((this.onBeginReplayDelegate == null)) {
                this.onBeginReplayDelegate = new BeginOperationDelegate(this.OnBeginReplay);
            }
            if ((this.onEndReplayDelegate == null)) {
                this.onEndReplayDelegate = new EndOperationDelegate(this.OnEndReplay);
            }
            if ((this.onReplayCompletedDelegate == null)) {
                this.onReplayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReplayCompleted);
            }
            base.InvokeAsync(this.onBeginReplayDelegate, null, this.onEndReplayDelegate, this.onReplayCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PCJack.ConnectionService.YouTubeReference.IYouTubeService.BeginBack(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBack(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PCJack.ConnectionService.YouTubeReference.IYouTubeService.EndBack(System.IAsyncResult result) {
            base.Channel.EndBack(result);
        }
        
        private System.IAsyncResult OnBeginBack(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PCJack.ConnectionService.YouTubeReference.IYouTubeService)(this)).BeginBack(callback, asyncState);
        }
        
        private object[] OnEndBack(System.IAsyncResult result) {
            ((PCJack.ConnectionService.YouTubeReference.IYouTubeService)(this)).EndBack(result);
            return null;
        }
        
        private void OnBackCompleted(object state) {
            if ((this.BackCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BackCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BackAsync() {
            this.BackAsync(null);
        }
        
        public void BackAsync(object userState) {
            if ((this.onBeginBackDelegate == null)) {
                this.onBeginBackDelegate = new BeginOperationDelegate(this.OnBeginBack);
            }
            if ((this.onEndBackDelegate == null)) {
                this.onEndBackDelegate = new EndOperationDelegate(this.OnEndBack);
            }
            if ((this.onBackCompletedDelegate == null)) {
                this.onBackCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBackCompleted);
            }
            base.InvokeAsync(this.onBeginBackDelegate, null, this.onEndBackDelegate, this.onBackCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PCJack.ConnectionService.YouTubeReference.IYouTubeService.BeginPausePlay(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPausePlay(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PCJack.ConnectionService.YouTubeReference.IYouTubeService.EndPausePlay(System.IAsyncResult result) {
            base.Channel.EndPausePlay(result);
        }
        
        private System.IAsyncResult OnBeginPausePlay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PCJack.ConnectionService.YouTubeReference.IYouTubeService)(this)).BeginPausePlay(callback, asyncState);
        }
        
        private object[] OnEndPausePlay(System.IAsyncResult result) {
            ((PCJack.ConnectionService.YouTubeReference.IYouTubeService)(this)).EndPausePlay(result);
            return null;
        }
        
        private void OnPausePlayCompleted(object state) {
            if ((this.PausePlayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PausePlayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PausePlayAsync() {
            this.PausePlayAsync(null);
        }
        
        public void PausePlayAsync(object userState) {
            if ((this.onBeginPausePlayDelegate == null)) {
                this.onBeginPausePlayDelegate = new BeginOperationDelegate(this.OnBeginPausePlay);
            }
            if ((this.onEndPausePlayDelegate == null)) {
                this.onEndPausePlayDelegate = new EndOperationDelegate(this.OnEndPausePlay);
            }
            if ((this.onPausePlayCompletedDelegate == null)) {
                this.onPausePlayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPausePlayCompleted);
            }
            base.InvokeAsync(this.onBeginPausePlayDelegate, null, this.onEndPausePlayDelegate, this.onPausePlayCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PCJack.ConnectionService.YouTubeReference.IYouTubeService.BeginNext(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNext(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PCJack.ConnectionService.YouTubeReference.IYouTubeService.EndNext(System.IAsyncResult result) {
            base.Channel.EndNext(result);
        }
        
        private System.IAsyncResult OnBeginNext(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PCJack.ConnectionService.YouTubeReference.IYouTubeService)(this)).BeginNext(callback, asyncState);
        }
        
        private object[] OnEndNext(System.IAsyncResult result) {
            ((PCJack.ConnectionService.YouTubeReference.IYouTubeService)(this)).EndNext(result);
            return null;
        }
        
        private void OnNextCompleted(object state) {
            if ((this.NextCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NextCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NextAsync() {
            this.NextAsync(null);
        }
        
        public void NextAsync(object userState) {
            if ((this.onBeginNextDelegate == null)) {
                this.onBeginNextDelegate = new BeginOperationDelegate(this.OnBeginNext);
            }
            if ((this.onEndNextDelegate == null)) {
                this.onEndNextDelegate = new EndOperationDelegate(this.OnEndNext);
            }
            if ((this.onNextCompletedDelegate == null)) {
                this.onNextCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNextCompleted);
            }
            base.InvokeAsync(this.onBeginNextDelegate, null, this.onEndNextDelegate, this.onNextCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PCJack.ConnectionService.YouTubeReference.IYouTubeService.BeginGetTittle(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTittle(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string PCJack.ConnectionService.YouTubeReference.IYouTubeService.EndGetTittle(System.IAsyncResult result) {
            return base.Channel.EndGetTittle(result);
        }
        
        private System.IAsyncResult OnBeginGetTittle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PCJack.ConnectionService.YouTubeReference.IYouTubeService)(this)).BeginGetTittle(callback, asyncState);
        }
        
        private object[] OnEndGetTittle(System.IAsyncResult result) {
            string retVal = ((PCJack.ConnectionService.YouTubeReference.IYouTubeService)(this)).EndGetTittle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTittleCompleted(object state) {
            if ((this.GetTittleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTittleCompleted(this, new GetTittleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTittleAsync() {
            this.GetTittleAsync(null);
        }
        
        public void GetTittleAsync(object userState) {
            if ((this.onBeginGetTittleDelegate == null)) {
                this.onBeginGetTittleDelegate = new BeginOperationDelegate(this.OnBeginGetTittle);
            }
            if ((this.onEndGetTittleDelegate == null)) {
                this.onEndGetTittleDelegate = new EndOperationDelegate(this.OnEndGetTittle);
            }
            if ((this.onGetTittleCompletedDelegate == null)) {
                this.onGetTittleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTittleCompleted);
            }
            base.InvokeAsync(this.onBeginGetTittleDelegate, null, this.onEndGetTittleDelegate, this.onGetTittleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PCJack.ConnectionService.YouTubeReference.IYouTubeService.BeginCloseYouTube(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCloseYouTube(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PCJack.ConnectionService.YouTubeReference.IYouTubeService.EndCloseYouTube(System.IAsyncResult result) {
            base.Channel.EndCloseYouTube(result);
        }
        
        private System.IAsyncResult OnBeginCloseYouTube(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PCJack.ConnectionService.YouTubeReference.IYouTubeService)(this)).BeginCloseYouTube(callback, asyncState);
        }
        
        private object[] OnEndCloseYouTube(System.IAsyncResult result) {
            ((PCJack.ConnectionService.YouTubeReference.IYouTubeService)(this)).EndCloseYouTube(result);
            return null;
        }
        
        private void OnCloseYouTubeCompleted(object state) {
            if ((this.CloseYouTubeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseYouTubeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseYouTubeAsync() {
            this.CloseYouTubeAsync(null);
        }
        
        public void CloseYouTubeAsync(object userState) {
            if ((this.onBeginCloseYouTubeDelegate == null)) {
                this.onBeginCloseYouTubeDelegate = new BeginOperationDelegate(this.OnBeginCloseYouTube);
            }
            if ((this.onEndCloseYouTubeDelegate == null)) {
                this.onEndCloseYouTubeDelegate = new EndOperationDelegate(this.OnEndCloseYouTube);
            }
            if ((this.onCloseYouTubeCompletedDelegate == null)) {
                this.onCloseYouTubeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseYouTubeCompleted);
            }
            base.InvokeAsync(this.onBeginCloseYouTubeDelegate, null, this.onEndCloseYouTubeDelegate, this.onCloseYouTubeCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override PCJack.ConnectionService.YouTubeReference.IYouTubeService CreateChannel() {
            return new YouTubeServiceClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.YouTubeService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IYouTubeService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.YouTubeService)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:8082/youtube/basic");
            }
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IYouTubeService)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:8082/192.168.0.27:8082/youtube/basic");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private class YouTubeServiceClientChannel : ChannelBase<PCJack.ConnectionService.YouTubeReference.IYouTubeService>, PCJack.ConnectionService.YouTubeReference.IYouTubeService {
            
            public YouTubeServiceClientChannel(System.ServiceModel.ClientBase<PCJack.ConnectionService.YouTubeReference.IYouTubeService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginOpenYoutube(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("OpenYoutube", _args, callback, asyncState);
                return _result;
            }
            
            public void EndOpenYoutube(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("OpenYoutube", _args, result);
            }
            
            public System.IAsyncResult BeginSearchForVideos(string s, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = s;
                System.IAsyncResult _result = base.BeginInvoke("SearchForVideos", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSearchForVideos(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SearchForVideos", _args, result);
            }
            
            public System.IAsyncResult BeginGetVideos(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetVideos", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PCJack.ConnectionService.YouTubeReference.PlayableElement> EndGetVideos(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PCJack.ConnectionService.YouTubeReference.PlayableElement> _result = ((System.Collections.ObjectModel.ObservableCollection<PCJack.ConnectionService.YouTubeReference.PlayableElement>)(base.EndInvoke("GetVideos", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVideosN(int i, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = i;
                System.IAsyncResult _result = base.BeginInvoke("GetVideosN", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PCJack.ConnectionService.YouTubeReference.PlayableElement> EndGetVideosN(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PCJack.ConnectionService.YouTubeReference.PlayableElement> _result = ((System.Collections.ObjectModel.ObservableCollection<PCJack.ConnectionService.YouTubeReference.PlayableElement>)(base.EndInvoke("GetVideosN", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginExitYouTube(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ExitYouTube", _args, callback, asyncState);
                return _result;
            }
            
            public void EndExitYouTube(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ExitYouTube", _args, result);
            }
            
            public System.IAsyncResult BeginOpenVideo(string s, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = s;
                System.IAsyncResult _result = base.BeginInvoke("OpenVideo", _args, callback, asyncState);
                return _result;
            }
            
            public void EndOpenVideo(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("OpenVideo", _args, result);
            }
            
            public System.IAsyncResult BeginReplay(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Replay", _args, callback, asyncState);
                return _result;
            }
            
            public void EndReplay(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Replay", _args, result);
            }
            
            public System.IAsyncResult BeginBack(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Back", _args, callback, asyncState);
                return _result;
            }
            
            public void EndBack(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Back", _args, result);
            }
            
            public System.IAsyncResult BeginPausePlay(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("PausePlay", _args, callback, asyncState);
                return _result;
            }
            
            public void EndPausePlay(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("PausePlay", _args, result);
            }
            
            public System.IAsyncResult BeginNext(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Next", _args, callback, asyncState);
                return _result;
            }
            
            public void EndNext(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Next", _args, result);
            }
            
            public System.IAsyncResult BeginGetTittle(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetTittle", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetTittle(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetTittle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCloseYouTube(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("CloseYouTube", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCloseYouTube(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CloseYouTube", _args, result);
            }
        }
        
        public enum EndpointConfiguration {
            
            YouTubeService,
            
            BasicHttpBinding_IYouTubeService,
        }
    }
}
